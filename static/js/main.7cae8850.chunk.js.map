{"version":3,"sources":["components/Menu/styles.js","components/Button/index.js","components/Menu/index.js","components/BannerMain/components/VideoIframeResponsive/styles.js","components/BannerMain/components/VideoIframeResponsive/index.js","components/BannerMain/styles.js","utils/utils.js","components/BannerMain/index.js","components/Carousel/styles.js","components/Carousel/components/VideoCard/styles.js","components/Carousel/components/VideoCard/index.js","components/Carousel/index.js","components/Footer/styles.js","components/Footer/index.js","App.js","index.js","assets/img/dhflix_logo.png"],"names":["MenuWrapper","styled","nav","MenuLogo","img","Button","button","Menu","href","src","Logo","alt","as","VideoWrapper","div","ResponsiveIframe","iframe","YouTubeIframeResponsive","youtubeID","videoTitle","title","frameBorder","allow","allowFullScreen","defaultProps","BannerMainWrapper","section","backgroundImage","ContentAreaWrapper","Item","Title","h2","Description","p","Category","h1","WatchButton","getYouTubeId","youtubeURL","replace","BannerMain","videoDescription","url","youTubeID","bgUrl","VideoIframeResponsive","h3","categoryColor","ExtraLink","a","VideoCardList","ul","VideoCardGroupContainer","VideoCardContainer","VideoCard","videoURL","image","target","VideoCardGroup","ignoreFirstVideo","category","categoryTitle","titulo","cor","categoryExtraLink","link_extra","videos","text","map","video","index","key","FooterBase","footer","FooterLogo","FooterCopyright","Footer","AppWrapper","App","dados","categorias","Carousel","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7cae8850.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MenuWrapper = styled.nav`\n  width: 100%;\n  height: 94px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  position: fixed;\n  z-index: 100;\n  top: 0;\n  left: 0;\n\n  padding-left: 5%;\n  padding-right: 5%;\n\n  background-color: var(--black);\n  border-bottom: 2px solid var(--primary);\n\n  @media (max-width: 800px) {\n    height: 40px;\n    justify-content: center;\n  }\n`;\n\nexport const MenuLogo = styled.img`\n  max-width: 168px;\n\n  @media (max-width: 800px) {\n    max-width: 105px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  color: var(--white);\n  border: 1px solid var(--grayLight);\n  cursor: pointer;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 16px;\n  outline: none;\n  border-radius: 5px;\n  text-decoration: none;\n  padding: 16px 24px;\n  transition: opacity 0.3s;\n\n  &:hover,\n  &:focus {\n    opacity: 0.5;\n  }\n\n  @media (max-width: 800px) {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--primary);\n    border-radius: 0;\n    border: 0;\n    text-align: center;\n    width: 100%;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\n\n// assets\nimport Logo from '../../assets/img/dhflix_logo.png';\n\n// components\nimport { MenuWrapper, MenuLogo } from './styles';\nimport Button from '../Button';\n\nconst Menu = () => (\n  <MenuWrapper>\n    <a href=\"/dh-flix\">\n      <MenuLogo src={Logo} alt=\"DH-Flix Logo\" />\n    </a>\n\n    <Button as=\"a\" href=\"/\">\n      Novo Vídeo\n    </Button>\n  </MenuWrapper>\n);\n\nexport default Menu;\n","import styled from 'styled-components';\n\nexport const VideoWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 56.25%;\n\n  @media (max-width: 800px) {\n    display: none;\n  }\n`;\n\nexport const ResponsiveIframe = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { VideoWrapper, ResponsiveIframe } from './styles';\n\nconst YouTubeIframeResponsive = ({ youtubeID, videoTitle }) => (\n  <VideoWrapper>\n    <ResponsiveIframe\n      title={videoTitle}\n      src={`https://www.youtube.com/embed/${youtubeID}?autoplay=0&mute=1`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    />\n  </VideoWrapper>\n);\n\nYouTubeIframeResponsive.defaultProps = {\n  videoTitle: 'Vídeo',\n};\n\nYouTubeIframeResponsive.propTypes = {\n  youtubeID: PropTypes.string.isRequired,\n  videoTitle: PropTypes.string,\n};\n\nexport default YouTubeIframeResponsive;\n","import styled from 'styled-components';\n\nexport const BannerMainWrapper = styled.section`\n  height: 80vh;\n  position: relative;\n  color: var(--white);\n\n  background-image: ${({ backgroundImage }) => `url(${backgroundImage})`};\n  background-size: cover;\n  background-position: center;\n\n  &:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: auto;\n    height: 100%;\n  }\n\n  &:before {\n    top: 0;\n    /* background: rgba(0, 0, 0, 0.5); */\n    background: linear-gradient(0deg, var(--grayDark) 0%, transparent 100%);\n  }\n\n  @media (max-width: 800px) {\n    height: auto;\n    min-height: 50vh;\n  }\n`;\n\nexport const ContentAreaWrapper = styled.section`\n  height: 100%;\n  margin-left: 5%;\n  margin-right: 5%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: relative;\n\n  @media (max-width: 800px) {\n    padding-top: 100px;\n    flex-direction: column;\n  }\n`;\n\nContentAreaWrapper.Item = styled.div`\n  width: 50%;\n  display: inline-block;\n  margin-bottom: 50px;\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n`;\n\nContentAreaWrapper.Title = styled.h2`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 40px;\n  line-height: 1;\n  margin-top: 0;\n  margin-bottom: 32px;\n\n  @media (max-width: 800px) {\n    font-size: 32px;\n    text-align: center;\n  }\n`;\n\nContentAreaWrapper.Description = styled.p`\n  @media (max-width: 800px) {\n    display: none;\n  }\n`;\n\nContentAreaWrapper.Category = styled.h1`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 60px;\n  line-height: 70px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  display: inline-block;\n  padding: 25px;\n  line-height: 1;\n  border-radius: 4px;\n\n  @media (max-width: 800px) {\n    display: none;\n    font-size: 18px;\n    padding: 10px;\n  }\n`;\n\nexport const WatchButton = styled.button`\n  background: var(--white);\n  border: 1px solid transparent;\n  border-color: var(--black);\n  border-radius: 5px;\n  color: var(--black);\n  cursor: pointer;\n  display: none;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: bold;\n  margin-left: auto;\n  margin-right: auto;\n  outline: none;\n  padding: 16px 24px;\n  text-decoration: none;\n  transition: opacity 0.3s;\n\n  &:hover,\n  &:focus {\n    opacity: 0.5;\n  }\n\n  @media (max-width: 800px) {\n    display: block;\n  }\n`;\n","export const getYouTubeId = (youtubeURL) => youtubeURL.replace(\n  /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/,\n  '$7',\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VideoIframeResponsive from './components/VideoIframeResponsive';\nimport {\n  BannerMainWrapper,\n  ContentAreaWrapper,\n  WatchButton,\n} from './styles';\n\nimport { getYouTubeId } from '../../utils/utils';\n\nconst BannerMain = ({ videoTitle, videoDescription, url }) => {\n  const youTubeID = getYouTubeId(url);\n  const bgUrl = `https://img.youtube.com/vi/${youTubeID}/maxresdefault.jpg`;\n\n  return (\n    <BannerMainWrapper backgroundImage={bgUrl}>\n      <ContentAreaWrapper>\n        <ContentAreaWrapper.Item>\n          <ContentAreaWrapper.Title>{videoTitle}</ContentAreaWrapper.Title>\n\n          <ContentAreaWrapper.Description>\n            {videoDescription}\n          </ContentAreaWrapper.Description>\n        </ContentAreaWrapper.Item>\n\n        <ContentAreaWrapper.Item>\n          <VideoIframeResponsive youtubeID={youTubeID} videoTitle={videoTitle} />\n          <WatchButton>Assistir</WatchButton>\n        </ContentAreaWrapper.Item>\n      </ContentAreaWrapper>\n    </BannerMainWrapper>\n  );\n};\n\nBannerMain.defaultProps = {\n  videoDescription: 'Descrição não fornecida.',\n};\n\nBannerMain.propTypes = {\n  videoTitle: PropTypes.string.isRequired,\n  videoDescription: PropTypes.string,\n  url: PropTypes.string.isRequired,\n};\n\nexport default BannerMain;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 35px;\n  line-height: 1;\n  margin-bottom: 16px;\n  display: inline-block;\n  padding: 20px;\n  background: red;\n  line-height: 1;\n  border-radius: 4px;\n\n  background-color: ${({ categoryColor }) => categoryColor || 'red'};\n\n  @media (max-width: 800px) {\n    font-size: 18px;\n    padding: 10px;\n  }\n`;\n\nexport const ExtraLink = styled.a`\n  margin-left: 16px;\n  text-decoration: none;\n  transition: opacity 0.3s;\n  &:hover,\n  &:focus {\n    opacity: 0.5;\n  }\n  @media (max-width: 800px) {\n    display: block;\n    margin-bottom: 16px;\n    margin-left: 0;\n  }\n`;\n\nexport const VideoCardList = styled.ul`\n  margin: 0;\n  padding-left: 0;\n  padding-bottom: 32px;\n  list-style: none;\n  display: flex;\n  overflow-x: auto;\n  flex-direction: row;\n\n  li {\n    margin-right: 16px;\n  }\n`;\n\nexport const VideoCardGroupContainer = styled.section`\n  color: white;\n  min-height: 197px;\n  margin-left: 5%;\n  margin-bottom: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const VideoCardContainer = styled.a`\n  border: 2px solid ${({ categoryColor }) => categoryColor || 'red'};\n  border-radius: 10px;\n\n  text-decoration: none;\n  overflow: hidden;\n  cursor: pointer;\n  color: white;\n\n  width: 298px;\n  height: 197px;\n\n  background-image: ${({ url }) => `url(${url})`};\n  background-size: cover;\n  background-position: center;\n\n  position: relative;\n\n  display: flex;\n  align-items: flex-end;\n  padding: 16px;\n\n  transition: opacity 0.3s;\n  &:hover,\n  &:focus {\n    opacity: 0.5;\n  }\n\n  &:not(:first-child) {\n    margin-left: 20px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { VideoCardContainer } from './styles';\n\nimport { getYouTubeId } from '../../../../utils/utils';\n\nconst VideoCard = ({ videoTitle, videoURL, categoryColor }) => {\n  const image = `https://img.youtube.com/vi/${getYouTubeId(\n    videoURL,\n  )}/hqdefault.jpg`;\n\n  return (\n    <VideoCardContainer\n      url={image}\n      href={videoURL}\n      target=\"_blank\"\n      categoryColor={categoryColor}\n      title={videoTitle}\n    />\n  );\n};\n\nVideoCard.propTypes = {\n  videoTitle: PropTypes.string.isRequired,\n  videoURL: PropTypes.string.isRequired,\n  categoryColor: PropTypes.string.isRequired,\n};\n\nexport default VideoCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  VideoCardGroupContainer,\n  VideoCardList,\n  Title,\n  ExtraLink,\n} from './styles';\n\nimport VideoCard from './components/VideoCard';\n\nconst VideoCardGroup = ({ ignoreFirstVideo, category }) => {\n  const categoryTitle = category.titulo;\n  const categoryColor = category.cor;\n  const categoryExtraLink = category.link_extra;\n  const { videos } = category;\n\n  return (\n    <VideoCardGroupContainer>\n      {categoryTitle && (\n        <>\n          <Title categoryColor={categoryColor}>{categoryTitle}</Title>\n          {categoryExtraLink && (\n            <ExtraLink href={categoryExtraLink.url} target=\"_blank\">\n              {categoryExtraLink.text}\n            </ExtraLink>\n          )}\n        </>\n      )}\n\n      <VideoCardList>\n        {videos.map((video, index) => {\n          if (ignoreFirstVideo && index === 0) {\n            return null;\n          }\n\n          return (\n            <li key={video.titulo}>\n              <VideoCard\n                videoTitle={video.titulo}\n                videoURL={video.url}\n                categoryColor={categoryColor}\n              />\n            </li>\n          );\n        })}\n      </VideoCardList>\n    </VideoCardGroupContainer>\n  );\n};\n\nVideoCardGroup.defaultProps = {\n  ignoreFirstVideo: false,\n};\n\nVideoCardGroup.propTypes = {\n  ignoreFirstVideo: PropTypes.bool,\n  category: PropTypes.shape({\n    titulo: PropTypes.string,\n    cor: PropTypes.string,\n    link_extra: PropTypes.string,\n    videos: PropTypes.arrayOf(PropTypes.shape({\n      titulo: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  }).isRequired,\n\n};\n\nexport default VideoCardGroup;\n","import styled from 'styled-components';\n\nexport const FooterBase = styled.footer`\n  background: var(--black);\n  border-top: 2px solid var(--primary);\n  color: var(--white);\n\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 800px) {\n    margin-bottom: 49px;\n  }\n`;\n\nexport const FooterLogo = styled.img`\n  max-width: 190px;\n  margin-top: 20px;\n\n  @media (max-width: 800px) {\n    max-width: 100px;\n  }\n`;\n\nexport const FooterCopyright = styled.p`\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport { FooterBase, FooterLogo, FooterCopyright } from './styles';\n\nimport Logo from '../../assets/img/dhflix_logo.png';\n\nconst Footer = () => (\n  <FooterBase>\n    <a href=\"https://siqueira-ec.github.io/dh-flix\">\n      <FooterLogo src={Logo} alt=\"DH-Flix Logo\" />\n    </a>\n    <FooterCopyright>\n      Orgulhosamente criado durante a\n      {' '}\n      <a href=\"https://www.alura.com.br/\">#Imersão React da Alura</a>\n    </FooterCopyright>\n  </FooterBase>\n);\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport dados from './mock-data/dados_iniciais.json';\n\nimport Menu from './components/Menu';\nimport BannerMain from './components/BannerMain';\nimport Carousel from './components/Carousel';\nimport Footer from './components/Footer';\n\nconst AppWrapper = styled.div`\n  background-color: var(--grayDark);\n  padding-top: 94px;\n\n  @media (max-width: 800px) {\n    padding-top: 40px;\n  }\n`;\n\nconst App = () => (\n  <AppWrapper>\n    <Menu />\n    <BannerMain\n      videoTitle={dados.categorias[0].videos[0].titulo}\n      url={dados.categorias[0].videos[0].url}\n    />\n    <Carousel ignoreFirstVideo category={dados.categorias[0]} />\n    <Carousel ignoreFirstVideo category={dados.categorias[1]} />\n    <Carousel ignoreFirstVideo category={dados.categorias[2]} />\n    <Carousel ignoreFirstVideo category={dados.categorias[3]} />\n    <Carousel ignoreFirstVideo category={dados.categorias[4]} />\n    <Footer />\n  </AppWrapper>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/dhflix_logo.a2eb4971.png\";"],"sourceRoot":""}